{"version":3,"file":"index.mjs","sources":["../lib/typed_arrays.js","../lib/deep_copy.js","../lib/copy.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( '@stdlib/array-int8' );\nvar Uint8Array = require( '@stdlib/array-uint8' );\nvar Uint8ClampedArray = require( '@stdlib/array-uint8c' );\nvar Int16Array = require( '@stdlib/array-int16' );\nvar Uint16Array = require( '@stdlib/array-uint16' );\nvar Int32Array = require( '@stdlib/array-int32' );\nvar Uint32Array = require( '@stdlib/array-uint32' );\nvar Float32Array = require( '@stdlib/array-float32' );\nvar Float64Array = require( '@stdlib/array-float64' );\n\n\n// VARIABLES //\n\nvar hash;\n\n\n// FUNCTIONS //\n\n/**\n* Copies an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - array to copy\n* @returns {Int8Array} new array\n*/\nfunction int8array( arr ) {\n\treturn new Int8Array( arr );\n}\n\n/**\n* Copies a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - array to copy\n* @returns {Uint8Array} new array\n*/\nfunction uint8array( arr ) {\n\treturn new Uint8Array( arr );\n}\n\n/**\n* Copies a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - array to copy\n* @returns {Uint8ClampedArray} new array\n*/\nfunction uint8clampedarray( arr ) {\n\treturn new Uint8ClampedArray( arr );\n}\n\n/**\n* Copies an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - array to copy\n* @returns {Int16Array} new array\n*/\nfunction int16array( arr ) {\n\treturn new Int16Array( arr );\n}\n\n/**\n* Copies a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - array to copy\n* @returns {Uint16Array} new array\n*/\nfunction uint16array( arr ) {\n\treturn new Uint16Array( arr );\n}\n\n/**\n* Copies an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - array to copy\n* @returns {Int32Array} new array\n*/\nfunction int32array( arr ) {\n\treturn new Int32Array( arr );\n}\n\n/**\n* Copies a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - array to copy\n* @returns {Uint32Array} new array\n*/\nfunction uint32array( arr ) {\n\treturn new Uint32Array( arr );\n}\n\n/**\n* Copies a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - array to copy\n* @returns {Float32Array} new array\n*/\nfunction float32array( arr ) {\n\treturn new Float32Array( arr );\n}\n\n/**\n* Copies a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - array to copy\n* @returns {Float64Array} new array\n*/\nfunction float64array( arr ) {\n\treturn new Float64Array( arr );\n}\n\n/**\n* Returns a hash of functions for copying typed arrays.\n*\n* @private\n* @returns {Object} function hash\n*/\nfunction typedarrays() {\n\tvar out = {\n\t\t'int8array': int8array,\n\t\t'uint8array': uint8array,\n\t\t'uint8clampedarray': uint8clampedarray,\n\t\t'int16array': int16array,\n\t\t'uint16array': uint16array,\n\t\t'int32array': int32array,\n\t\t'uint32array': uint32array,\n\t\t'float32array': float32array,\n\t\t'float64array': float64array\n\t};\n\treturn out;\n}\n\n\n// MAIN //\n\nhash = typedarrays();\n\n\n// EXPORTS //\n\nmodule.exports = hash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isArray = require( '@stdlib/assert-is-array' );\nvar isBuffer = require( '@stdlib/assert-is-buffer' );\nvar isError = require( '@stdlib/assert-is-error' );\nvar typeOf = require( '@stdlib/utils-type-of' );\nvar regexp = require( '@stdlib/utils-regexp-from-string' );\nvar indexOf = require( '@stdlib/utils-index-of' );\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar propertyNames = require( '@stdlib/utils-property-names' );\nvar propertyDescriptor = require( '@stdlib/utils-property-descriptor' );\nvar getPrototypeOf = require( '@stdlib/utils-get-prototype-of' );\nvar defineProperty = require( '@stdlib/utils-define-property' );\nvar copyBuffer = require( '@stdlib/buffer-from-buffer' );\nvar typedArrays = require( './typed_arrays.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Clones a class instance.\n*\n* ## Notes\n*\n* -   This should **only** be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered **fragile**.\n* -   The function is greedy, disregarding the notion of a `level`. Instead, the function deep copies all properties, as we assume the concept of `level` applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache;\n\tvar names;\n\tvar name;\n\tvar refs;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tcache = [];\n\trefs = [];\n\n\tref = Object.create( getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = propertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = propertyDescriptor( val, name );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n}\n\n/**\n* Copies an error object.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - error to copy\n* @returns {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error copy\n*\n* @example\n* var err1 = new TypeError( 'beep' );\n*\n* var err2 = copyError( err1 );\n* // returns <TypeError>\n*/\nfunction copyError( error ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar keys;\n\tvar desc;\n\tvar tmp;\n\tvar key;\n\tvar err;\n\tvar i;\n\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\tcache.push( error );\n\trefs.push( err );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = propertyDescriptor( error, key );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( error[ key ] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( error[ key ], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( err, key, desc );\n\t}\n\treturn err;\n}\n\n\n// MAIN //\n\n/**\n* Recursively performs a deep copy of an input object.\n*\n* @private\n* @param {*} val - value to copy\n* @param {(Array|Object)} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {NonNegativeInteger} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel -= 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn copyBuffer( val );\n\t}\n\tif ( isError( val ) ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeOf( val );\n\n\tif ( name === 'date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'regexp' ) {\n\t\treturn regexp( val.toString() );\n\t}\n\tif ( name === 'set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'string' ||\n\t\tname === 'boolean' ||\n\t\tname === 'number'\n\t) {\n\t\t// If provided an `Object`, return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'array' &&\n\t\tname !== 'object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeOf( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'array' &&\n\t\t\t\t\tname !== 'object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'object' ) {\n\t\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray( x ) ) ? new Array( x.length ) : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else if ( name === 'array' ) {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tcopy[ key ] = val[ key ];\n\t\t}\n\t} else {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\tdefineProperty( copy, key, desc );\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepCopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert-is-array' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar deepCopy = require( './deep_copy.js' );\n\n\n// MAIN //\n\n/**\n* Copies or deep clones a value to an arbitrary depth.\n*\n* @param {*} value - value to copy\n* @param {NonNegativeInteger} [level=+infinity] - copy depth\n* @throws {TypeError} `level` must be a nonnegative integer\n* @returns {*} value copy\n*\n* @example\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\nfunction copy( value, level ) {\n\tvar out;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. `level` must be a nonnegative integer. Value: `%s`.', level ) );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tout = ( isArray( value ) ) ? new Array( value.length ) : {};\n\treturn deepCopy( value, out, [value], [out], level );\n}\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy or deep clone a value to an arbitrary depth.\n*\n* @module @stdlib/utils-copy\n*\n* @example\n* var copy = require( '@stdlib/utils-copy' );\n*\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var copy = require( '@stdlib/utils-copy' );\n*\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ {'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\n\n// MODULES //\n\nvar copy = require( './copy.js' );\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n"],"names":["Int8Array","require$$0","Uint8Array","require$$1","Uint8ClampedArray","require$$2","Int16Array","require$$3","Uint16Array","require$$4","Int32Array","require$$5","Uint32Array","require$$6","Float32Array","require$$7","Float64Array","require$$8","int8array","arr","uint8array","uint8clampedarray","int16array","uint16array","int32array","uint32array","float32array","float64array","hasOwnProp","isArray","isBuffer","isError","typeOf","regexp","indexOf","objectKeys","propertyNames","propertyDescriptor","require$$9","getPrototypeOf","require$$10","defineProperty","require$$11","copyBuffer","require$$12","typedArrays","deepCopy","val","copy","cache","refs","level","parent","keys","name","desc","ctor","key","ref","x","i","j","error","tmp","err","constructor","message","push","stack","code","errno","syscall","length","value","copyError","Date","toString","Set","Map","valueOf","Object","freeze","names","create","isExtensible","preventExtensions","isSealed","seal","isFrozen","cloneInstance","Array","deep_copy","isNonNegativeInteger","isPrimitive","format","PINF","lib","out","arguments","TypeError"],"mappings":"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"}