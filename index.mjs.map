{"version":3,"file":"index.mjs","sources":["../lib/typed_arrays.js","../lib/deep_copy.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Int8Array from '@stdlib/array-int8';\nimport Uint8Array from '@stdlib/array-uint8';\nimport Uint8ClampedArray from '@stdlib/array-uint8c';\nimport Int16Array from '@stdlib/array-int16';\nimport Uint16Array from '@stdlib/array-uint16';\nimport Int32Array from '@stdlib/array-int32';\nimport Uint32Array from '@stdlib/array-uint32';\nimport Float32Array from '@stdlib/array-float32';\nimport Float64Array from '@stdlib/array-float64';\n\n\n// VARIABLES //\n\nvar hash;\n\n\n// FUNCTIONS //\n\n/**\n* Copies an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - array to copy\n* @returns {Int8Array} new array\n*/\nfunction int8array( arr ) {\n\treturn new Int8Array( arr );\n}\n\n/**\n* Copies a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - array to copy\n* @returns {Uint8Array} new array\n*/\nfunction uint8array( arr ) {\n\treturn new Uint8Array( arr );\n}\n\n/**\n* Copies a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - array to copy\n* @returns {Uint8ClampedArray} new array\n*/\nfunction uint8clampedarray( arr ) {\n\treturn new Uint8ClampedArray( arr );\n}\n\n/**\n* Copies an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - array to copy\n* @returns {Int16Array} new array\n*/\nfunction int16array( arr ) {\n\treturn new Int16Array( arr );\n}\n\n/**\n* Copies a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - array to copy\n* @returns {Uint16Array} new array\n*/\nfunction uint16array( arr ) {\n\treturn new Uint16Array( arr );\n}\n\n/**\n* Copies an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - array to copy\n* @returns {Int32Array} new array\n*/\nfunction int32array( arr ) {\n\treturn new Int32Array( arr );\n}\n\n/**\n* Copies a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - array to copy\n* @returns {Uint32Array} new array\n*/\nfunction uint32array( arr ) {\n\treturn new Uint32Array( arr );\n}\n\n/**\n* Copies a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - array to copy\n* @returns {Float32Array} new array\n*/\nfunction float32array( arr ) {\n\treturn new Float32Array( arr );\n}\n\n/**\n* Copies a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - array to copy\n* @returns {Float64Array} new array\n*/\nfunction float64array( arr ) {\n\treturn new Float64Array( arr );\n}\n\n/**\n* Returns a hash of functions for copying typed arrays.\n*\n* @private\n* @returns {Object} function hash\n*/\nfunction typedarrays() {\n\tvar out = {\n\t\t'int8array': int8array,\n\t\t'uint8array': uint8array,\n\t\t'uint8clampedarray': uint8clampedarray,\n\t\t'int16array': int16array,\n\t\t'uint16array': uint16array,\n\t\t'int32array': int32array,\n\t\t'uint32array': uint32array,\n\t\t'float32array': float32array,\n\t\t'float64array': float64array\n\t};\n\treturn out;\n}\n\n\n// MAIN //\n\nhash = typedarrays();\n\n\n// EXPORTS //\n\nexport default hash;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport isArray from '@stdlib/assert-is-array';\nimport isBuffer from '@stdlib/assert-is-buffer';\nimport isError from '@stdlib/assert-is-error';\nimport typeOf from '@stdlib/utils-type-of';\nimport regexp from '@stdlib/utils-regexp-from-string';\nimport indexOf from '@stdlib/utils-index-of';\nimport objectKeys from '@stdlib/utils-keys';\nimport propertyNames from '@stdlib/utils-property-names';\nimport propertyDescriptor from '@stdlib/utils-property-descriptor';\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of';\nimport defineProperty from '@stdlib/utils-define-property';\nimport copyBuffer from '@stdlib/buffer-from-buffer';\nimport typedArrays from './typed_arrays.js';\n\n\n// FUNCTIONS //\n\n/**\n* Clones a class instance.\n*\n* ## Notes\n*\n* -   This should **only** be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered **fragile**.\n* -   The function is greedy, disregarding the notion of a `level`. Instead, the function deep copies all properties, as we assume the concept of `level` applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache;\n\tvar names;\n\tvar name;\n\tvar refs;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tcache = [];\n\trefs = [];\n\n\tref = Object.create( getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = propertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = propertyDescriptor( val, name );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n}\n\n/**\n* Copies an error object.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - error to copy\n* @returns {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error copy\n*\n* @example\n* var err1 = new TypeError( 'beep' );\n*\n* var err2 = copyError( err1 );\n* // returns <TypeError>\n*/\nfunction copyError( error ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar keys;\n\tvar desc;\n\tvar tmp;\n\tvar key;\n\tvar err;\n\tvar i;\n\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\tcache.push( error );\n\trefs.push( err );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = propertyDescriptor( error, key );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( error[ key ] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( error[ key ], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( err, key, desc );\n\t}\n\treturn err;\n}\n\n\n// MAIN //\n\n/**\n* Recursively performs a deep copy of an input object.\n*\n* @private\n* @param {*} val - value to copy\n* @param {(Array|Object)} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {NonNegativeInteger} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel -= 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn copyBuffer( val );\n\t}\n\tif ( isError( val ) ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeOf( val );\n\n\tif ( name === 'date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'regexp' ) {\n\t\treturn regexp( val.toString() );\n\t}\n\tif ( name === 'set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'string' ||\n\t\tname === 'boolean' ||\n\t\tname === 'number'\n\t) {\n\t\t// If provided an `Object`, return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'array' &&\n\t\tname !== 'object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeOf( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'array' &&\n\t\t\t\t\tname !== 'object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'object' ) {\n\t\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray( x ) ) ? new Array( x.length ) : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else if ( name === 'array' ) {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tcopy[ key ] = val[ key ];\n\t\t}\n\t} else {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\tdefineProperty( copy, key, desc );\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n}\n\n\n// EXPORTS //\n\nexport default deepCopy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport deepCopy from './deep_copy.js';\n\n\n// MAIN //\n\n/**\n* Copies or deep clones a value to an arbitrary depth.\n*\n* @param {*} value - value to copy\n* @param {NonNegativeInteger} [level=+infinity] - copy depth\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {*} value copy\n*\n* @example\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\nfunction copy( value, level ) {\n\tvar out;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( format( '0j03k', level ) );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tout = ( isArray( value ) ) ? new Array( value.length ) : {};\n\treturn deepCopy( value, out, [value], [out], level );\n}\n\n\n// EXPORTS //\n\nexport default copy;\n"],"names":["int8array","arr","Int8Array","uint8array","Uint8Array","uint8clampedarray","Uint8ClampedArray","int16array","Int16Array","uint16array","Uint16Array","int32array","Int32Array","uint32array","Uint32Array","float32array","Float32Array","float64array","Float64Array","typedArrays","deepCopy","val","copy","cache","refs","level","parent","keys","name","desc","ctor","key","ref","x","i","j","isBuffer","copyBuffer","isError","error","tmp","err","constructor","message","push","stack","code","errno","syscall","objectKeys","length","propertyDescriptor","hasOwnProp","isArray","value","defineProperty","copyError","typeOf","Date","regexp","toString","Set","Map","valueOf","Object","freeze","names","create","getPrototypeOf","propertyNames","isExtensible","preventExtensions","isSealed","seal","isFrozen","cloneInstance","indexOf","Array","out","arguments","isNonNegativeInteger","TypeError","format","PINF"],"mappings":"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"}